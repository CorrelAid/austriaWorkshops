---
format:
  revealjs: 
    theme: [simple, custom.scss]
    transition: slide
footer: <https://github.com/CorrelAid/austriaWorkshops/>
editor: visual
logo: figs/correl.png
---

##  {margin="0.6"}

::: {style="margin-top: 150px;"}
::: {fig-align="center"}
::: nostretch
![](figs/correl_aus.png){width="458" fig-align="center"}
:::
:::
:::

::: {style="text-align: center; font-size:2em; color:#214f8f"}
**R ggplot (2) - Maps**
:::

::: {style="text-align: center;"}
Julian Granna
:::

## Contents {.smaller}

::: incremental
-   Administrative stuff
-   Personal bio
-   Introduction to the concept on maps in R
-   Brief introduction into today's dataset including some descriptive graphs with `ggplot`
-   Build a map that shows unemployment rates in Austrian states (`sf`-package)
-   Extent the map with some style
:::

## CorrelAid

We are a network of over 2.000 volunteers, who want to improve the world through data science

-   2.400 data analysts in our interdisciplinary and diverse network

-   57 finished projects with well-known NPO since 2015 & \>60 workshops

-   13 local chapters in Germany, the Netherlands, France, Switzerland, and Austria

Join us for data4good projects, workshops and exchange with a great network

<https://www.correlaid.org> & [austria\@correlaid.org](mailto:austria@correlaid.org)

## Administrative

::: incremental
-   all code and presentation can be found on GitHub: <https://github.com/CorrelAid/austriaWorkshops/materials/2023-05-09_ggplot2_spatial>
-   Details on workshops can be found on our website: <https://github.com/CorrelAid/austriaWorkshops>
:::

## About me {.smaller}

### Education / Work

::: incremental
-   BSc. in Economics and Business Administration at Leibniz University Hannover, DE
-   MSc. in Economics at UIBK, AT
-   University assistant and PhD student in Economics and Statistics at Dept. of Statistics, UIBK
-   Research focus: Hedonic modeling of real estate prices in Germany
:::

## Maps with ggplot {.smaller}

::: incremental
-   A good resource to get started is the [ggplot 2: elegant graphics for data analysis](https://ggplot2-book.org/) book by Hadley Wickham published by Springer (not only for maps).
-   Typical setting for generating a map: Two data sources, a) some metadata that needs to be put into a map, and b) the map itself.
-   For most applications, two types of maps can be distinguished. 1) "longitude - latitude" data (e.g. precipitation, elevation), 2) data that are aggregated for regions (e.g. unemployment, covid infections)
-   This presentation: a) "simple features" (sf) to draw a map of Austrian states, b) use unemployment data from Statistics Austria to plot unemployment rates over the states in Austria.
:::

::: {layout="[[1,1,1,1,1]]"}
![](figs/precipitation.png)

![](figs/maps_austria.png)

![](figs/covid.png)

![](figs/final.png)

![](figs/transparent.png)
:::

## a) Metadata: Unemployment in Austria {.smaller}

```{r}
#| echo: true
#| output-location: fragment
#| code-line-numbers: "|1,2,3|4|5|"

# read data from github
url <- 
  "https://raw.githubusercontent.com/CorrelAid/austriaWorkshops/main/materials/2022-09-27%20ggplot2_spatial/data/unemployment_austria.csv"
data <- read.csv(url, header = TRUE, sep = ";", dec = ",")
names(data)
```

. . .

```{r}
#| echo: true
#| output-location: fragment
#| code-line-numbers: "|1,2|4,5|"

# rename variables
names(data) <- c("states", "unemployed", "unemployed.men", "unemployed.women", "rate", "rate.men", "rate.women")

# view data 
head(data)
```

## a) Metadata: Unemployment in Austria {.smaller}

First, we can do a bar plot of the ordered unemployment rates

```{r}
#| echo: true
#| output-location: column-fragment
#| code-line-numbers: "|1,2|4,5,6,7|"

# order states by unemployment rates
data <- data[order(data$rate), ]   

# plot
library(ggplot2)
data$states <- factor(data$states, 
                      levels = data$states)
ggplot(data = data, aes(x = states, y = rate)) +
  geom_col()
```

## a) Metadata: Unemployment in Austria {.smaller}

```{r}
#| echo: true
#| output-location: column
#| code-line-numbers: "|1,2,3|4|5,6,7|8,9,10,11,12,13,14,15,16|17,18,19,20,21|"

# plot
ggplot(data = data, aes(x = states, y = rate, 
                        fill = rate)) +
  geom_bar(stat = "identity") + 
  labs(title = "Unemployment Rates, AT",
       caption = "Source: STATISTICS AUSTRIA,
       Labour Force Survey (Microcensus) 2021.") +
  theme_bw() + 
  theme(
    axis.text.x = element_text(angle = 30,
                               vjust = 1,
                               hjust = 1),
    axis.title = element_text(face = "bold"),
    plot.title.position = "plot",
    legend.position = "top"
  ) +
  guides(
   fill = guide_colorsteps(title.position = 'top', 
                            even.steps = TRUE,
                            barwidth = 20, 
                            barheight = 0.5,
                            title.hjust = .5)) 
```

## b) Drawing a map with sf {.smaller}

-   Usually, vector data for maps are encoded using "simple features" (sf), a standard produced by the Open Geospatial Consortium.
-   The next step is to draw a map using the [sf-package](https://github.com/r-spatial/sf). Our map data comes from the [rnaturalearth-package](https://github.com/ropensci/rnaturalearth).

```{r}
#| echo: true
#| output-location: fragment
#| code-line-numbers: "|1|2|4,5|7,8,9|1-11|"
 
library(sf)
library(rnaturalearth)

# read sf data for Austrian map
austria <- ne_states(country = "Austria", returnclass = "sf")

# look at the data
class(austria)

# glimpse at the map data
# austria
```

## b) Drawing a map with sf {.smaller}

Generating a map with sf is really simple:

```{r}
#| echo: true
#| output-location: fragment

# draw the map
ggplot(data = austria) +
  geom_sf()
```

## Merge sf object with metadata {.smaller}

Finally, we need to merge our unemployment data with the `austria` data.frame to color the states corresponding to the unemployment. I use color palettes from the [colorspace-package](https://colorspace.r-forge.r-project.org/).

. . .

```{r}
#| echo: true
#| output-location: fragment
#| code-line-numbers: "|1,2|1,3|1,4|"

# merge 
data <- subset(data, states != "Austria")
names(data)[1] <- "name_en"
austria <- merge(austria, data, by = "name_en")
```

## Plot the unemployment map {.smaller}

```{r}
#| echo: true
#| output-location: column
#| code-line-numbers: "|1,2|3|4|5|6-11|12|13-16|17-22|23|"
 
# plot
library(colorspace)
p <- ggplot(data = austria) +
  theme_bw() +
  geom_sf(aes(fill = rate)) + 
  labs(
    title = "Unemployment rates Austria",
    caption = "Source: STATISTICS AUSTRIA,
       Labour Force Survey (Microcensus) 2021.",
    fill = "unemployment rate"
  ) +
  scale_fill_binned_sequential(palette = "Red-Blue") +
  theme(
    plot.title.position = "plot",
    legend.position = "bottom"
  ) +
  guides(
   fill = guide_colorsteps(title.position = 'bottom', 
                            even.steps = TRUE,
                            barwidth = 20, 
                            barheight = 0.5,
                            title.hjust = .5)) 
p
```

## Extra: Add city names to the plot {.smaller}

```{r}
#| echo: true
#| output-location: column-fragment
#| code-line-numbers: "|1-2|4-6|8-11|12-15|16|"

library(maps)
library(ggrepel)

# read city names 
austria.cities <- subset(world.cities, 
  country.etc == "Austria" & pop > 40000)

# add to plot
p <- p + 
  geom_point(data = austria.cities, 
             aes(x = long, y = lat)) +
  geom_text_repel(data = austria.cities, 
                  aes(x = long, y = lat, 
                      label = name), 
                  size = 4) 
p
```

## now it is your turn

-   Use the `presentation.R` script from github <https://github.com/CorrelAid/austriaWorkshops/materials/2023-05-09_ggplot2_spatial>

-   Adapt the code and plot the unemployment rate separately for men and women either

    1.  *(beginners)* using two different plots or

    2.  *(advanced)* using facets in ggplot.

-   Feel free to experiment with colours, legend positions / types, etc. !
